<<<<<<< HEAD
import isSameDay from "../isSameDay/index.js";
import subDays from "../subDays/index.js";
import requiredArgs from "../_lib/requiredArgs/index.js";
=======
import isSameDay from '../isSameDay/index.js';
import subDays from '../subDays/index.js';
import requiredArgs from '../_lib/requiredArgs/index.js';
>>>>>>> f65d1c32 (Fix all bugs)
/**
 * @name isYesterday
 * @category Day Helpers
 * @summary Is the given date yesterday?
 * @pure false
 *
 * @description
 * Is the given date yesterday?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
<<<<<<< HEAD
=======
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
>>>>>>> f65d1c32 (Fix all bugs)
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is yesterday
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
<<<<<<< HEAD
 * const result = isYesterday(new Date(2014, 9, 5, 14, 0))
=======
 * var result = isYesterday(new Date(2014, 9, 5, 14, 0))
>>>>>>> f65d1c32 (Fix all bugs)
 * //=> true
 */

export default function isYesterday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, subDays(Date.now(), 1));
}