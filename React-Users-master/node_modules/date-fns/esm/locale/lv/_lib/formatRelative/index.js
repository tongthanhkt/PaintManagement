<<<<<<< HEAD
import isSameUTCWeek from "../../../../_lib/isSameUTCWeek/index.js";
var weekdays = ['svētdienā', 'pirmdienā', 'otrdienā', 'trešdienā', 'ceturtdienā', 'piektdienā', 'sestdienā'];
var formatRelativeLocale = {
  lastWeek: function lastWeek(date, baseDate, options) {
=======
import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js';
var weekdays = ['svētdienā', 'pirmdienā', 'otrdienā', 'trešdienā', 'ceturtdienā', 'piektdienā', 'sestdienā'];
var formatRelativeLocale = {
  lastWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    if (isSameUTCWeek(date, baseDate, options)) {
      return "eeee 'plkst.' p";
    }

    var weekday = weekdays[date.getUTCDay()];
    return "'Pagājušā " + weekday + " plkst.' p";
  },
  yesterday: "'Vakar plkst.' p",
  today: "'Šodien plkst.' p",
  tomorrow: "'Rīt plkst.' p",
<<<<<<< HEAD
  nextWeek: function nextWeek(date, baseDate, options) {
=======
  nextWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    if (isSameUTCWeek(date, baseDate, options)) {
      return "eeee 'plkst.' p";
    }

    var weekday = weekdays[date.getUTCDay()];
    return "'Nākamajā " + weekday + " plkst.' p";
  },
  other: 'P'
};
<<<<<<< HEAD

var formatRelative = function formatRelative(token, date, baseDate, options) {
=======
export default function formatRelative(token, date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
  var format = formatRelativeLocale[token];

  if (typeof format === 'function') {
    return format(date, baseDate, options);
  }

  return format;
<<<<<<< HEAD
};

export default formatRelative;
=======
}
>>>>>>> f65d1c32 (Fix all bugs)
