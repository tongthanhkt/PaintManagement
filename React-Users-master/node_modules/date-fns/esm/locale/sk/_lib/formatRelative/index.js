<<<<<<< HEAD
import isSameUTCWeek from "../../../../_lib/isSameUTCWeek/index.js";
// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308
var accusativeWeekdays = ['nedeľu', 'pondelok', 'utorok', 'stredu', 'štvrtok', 'piatok', 'sobotu'];

function _lastWeek(day) {
=======
import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js'; // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308

var accusativeWeekdays = ['nedeľu', 'pondelok', 'utorok', 'stredu', 'štvrtok', 'piatok', 'sobotu'];

function lastWeek(day) {
>>>>>>> f65d1c32 (Fix all bugs)
  var weekday = accusativeWeekdays[day];

  switch (day) {
    case 0:
    /* Sun */

<<<<<<< HEAD
    case 3:
=======
    case 4:
>>>>>>> f65d1c32 (Fix all bugs)
    /* Wed */

    case 6
    /* Sat */
    :
      return "'minulú " + weekday + " o' p";

    default:
      return "'minulý' eeee 'o' p";
  }
}

function thisWeek(day) {
  var weekday = accusativeWeekdays[day];

  if (day === 4
  /* Thu */
  ) {
      return "'vo' eeee 'o' p";
    } else {
    return "'v " + weekday + " o' p";
  }
}

<<<<<<< HEAD
function _nextWeek(day) {
=======
function nextWeek(day) {
>>>>>>> f65d1c32 (Fix all bugs)
  var weekday = accusativeWeekdays[day];

  switch (day) {
    case 0:
    /* Sun */

    case 4:
    /* Wed */

    case 6
    /* Sat */
    :
<<<<<<< HEAD
      return "'budúcu " + weekday + " o' p";
=======
      return "'budúcu' " + weekday + " 'o' p";
>>>>>>> f65d1c32 (Fix all bugs)

    default:
      return "'budúci' eeee 'o' p";
  }
}

var formatRelativeLocale = {
<<<<<<< HEAD
  lastWeek: function lastWeek(date, baseDate, options) {
=======
  lastWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    var day = date.getUTCDay();

    if (isSameUTCWeek(date, baseDate, options)) {
      return thisWeek(day);
    } else {
<<<<<<< HEAD
      return _lastWeek(day);
=======
      return lastWeek(day);
>>>>>>> f65d1c32 (Fix all bugs)
    }
  },
  yesterday: "'včera o' p",
  today: "'dnes o' p",
  tomorrow: "'zajtra o' p",
<<<<<<< HEAD
  nextWeek: function nextWeek(date, baseDate, options) {
=======
  nextWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    var day = date.getUTCDay();

    if (isSameUTCWeek(date, baseDate, options)) {
      return thisWeek(day);
    } else {
<<<<<<< HEAD
      return _nextWeek(day);
=======
      return nextWeek(day);
>>>>>>> f65d1c32 (Fix all bugs)
    }
  },
  other: 'P'
};
<<<<<<< HEAD

var formatRelative = function formatRelative(token, date, baseDate, options) {
=======
export default function formatRelative(token, date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
  var format = formatRelativeLocale[token];

  if (typeof format === 'function') {
    return format(date, baseDate, options);
  }

  return format;
<<<<<<< HEAD
};

export default formatRelative;
=======
}
>>>>>>> f65d1c32 (Fix all bugs)
