<<<<<<< HEAD
export default function convertToFP(fn, arity) {
  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
=======
export default function convertToFP(fn, arity, a) {
  a = a || [];
>>>>>>> f65d1c32 (Fix all bugs)

  if (a.length >= arity) {
    return fn.apply(null, a.slice(0, arity).reverse());
  }

  return function () {
<<<<<<< HEAD
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

=======
    var args = Array.prototype.slice.call(arguments);
>>>>>>> f65d1c32 (Fix all bugs)
    return convertToFP(fn, arity, a.concat(args));
  };
}