<<<<<<< HEAD
import toInteger from "../_lib/toInteger/index.js";
import toDate from "../toDate/index.js";
import getDaysInMonth from "../getDaysInMonth/index.js";
import requiredArgs from "../_lib/requiredArgs/index.js";
=======
import toInteger from '../_lib/toInteger/index.js';
import toDate from '../toDate/index.js';
import getDaysInMonth from '../getDaysInMonth/index.js';
import requiredArgs from '../_lib/requiredArgs/index.js';
>>>>>>> f65d1c32 (Fix all bugs)
/**
 * @name setMonth
 * @category Month Helpers
 * @summary Set the month to the given date.
 *
 * @description
 * Set the month to the given date.
 *
<<<<<<< HEAD
=======
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
>>>>>>> f65d1c32 (Fix all bugs)
 * @param {Date|Number} date - the date to be changed
 * @param {Number} month - the month of the new date
 * @returns {Date} the new date with the month set
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Set February to 1 September 2014:
<<<<<<< HEAD
 * const result = setMonth(new Date(2014, 8, 1), 1)
=======
 * var result = setMonth(new Date(2014, 8, 1), 1)
>>>>>>> f65d1c32 (Fix all bugs)
 * //=> Sat Feb 01 2014 00:00:00
 */

export default function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month
  // if the original date was the last day of the longer month

  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}