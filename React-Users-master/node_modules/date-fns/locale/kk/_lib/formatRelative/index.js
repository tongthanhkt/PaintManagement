"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
exports.default = void 0;
=======
exports.default = formatRelative;
>>>>>>> f65d1c32 (Fix all bugs)

var _index = _interopRequireDefault(require("../../../../_lib/isSameUTCWeek/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var accusativeWeekdays = ['жексенбіде', 'дүйсенбіде', 'сейсенбіде', 'сәрсенбіде', 'бейсенбіде', 'жұмада', 'сенбіде'];

<<<<<<< HEAD
function _lastWeek(day) {
=======
function lastWeek(day) {
>>>>>>> f65d1c32 (Fix all bugs)
  var weekday = accusativeWeekdays[day];
  return "'өткен " + weekday + " сағат' p'-де'";
}

function thisWeek(day) {
  var weekday = accusativeWeekdays[day];
  return "'" + weekday + " сағат' p'-де'";
}

<<<<<<< HEAD
function _nextWeek(day) {
=======
function nextWeek(day) {
>>>>>>> f65d1c32 (Fix all bugs)
  var weekday = accusativeWeekdays[day];
  return "'келесі " + weekday + " сағат' p'-де'";
}

var formatRelativeLocale = {
<<<<<<< HEAD
  lastWeek: function lastWeek(date, baseDate, options) {
=======
  lastWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    var day = date.getUTCDay();

    if ((0, _index.default)(date, baseDate, options)) {
      return thisWeek(day);
    } else {
<<<<<<< HEAD
      return _lastWeek(day);
=======
      return lastWeek(day);
>>>>>>> f65d1c32 (Fix all bugs)
    }
  },
  yesterday: "'кеше сағат' p'-де'",
  today: "'бүгін сағат' p'-де'",
  tomorrow: "'ертең сағат' p'-де'",
<<<<<<< HEAD
  nextWeek: function nextWeek(date, baseDate, options) {
=======
  nextWeek: function (date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
    var day = date.getUTCDay();

    if ((0, _index.default)(date, baseDate, options)) {
      return thisWeek(day);
    } else {
<<<<<<< HEAD
      return _nextWeek(day);
=======
      return nextWeek(day);
>>>>>>> f65d1c32 (Fix all bugs)
    }
  },
  other: 'P'
};

<<<<<<< HEAD
var formatRelative = function formatRelative(token, date, baseDate, options) {
=======
function formatRelative(token, date, baseDate, options) {
>>>>>>> f65d1c32 (Fix all bugs)
  var format = formatRelativeLocale[token];

  if (typeof format === 'function') {
    return format(date, baseDate, options);
  }

  return format;
<<<<<<< HEAD
};

var _default = formatRelative;
exports.default = _default;
=======
}

>>>>>>> f65d1c32 (Fix all bugs)
module.exports = exports.default;